diff -Naur qrap-9999.orig/CMakeLists.txt qrap-9999/CMakeLists.txt
--- qrap-9999.orig/CMakeLists.txt	2017-02-19 18:55:24.508772641 +0200
+++ qrap-9999/CMakeLists.txt	2017-02-19 19:09:11.551848056 +0200
@@ -759,8 +759,7 @@
 #	/usr/include/gdal
    	/usr/include/Poco/
 #	/usr/include/libcmaes/src/
-	/usr/include/qwt-qt4
-#	/usr/include/qwt
+	/usr/include/qwt5
 
 	../libcmaes/src
 	../libcmaes
@@ -782,8 +781,7 @@
     	libPocoXML.so
 	libqgis_core.so
   	libqgis_gui.so
-	libqwt-qt4.so
-#	libqwt.so
+	libqwt.so
 )
 
 
@@ -803,12 +801,12 @@
 
 INSTALL(CODE "MESSAGE(\"Installing Settings Files...\")")
 INSTALL(FILES ${XML_FILES}
-       DESTINATION ${QGIS_PLUGIN_DIR}
+       DESTINATION /usr/share/qrap/resources
 )
 
       
 INSTALL(CODE "MESSAGE(\"Installing Images...\")")
 INSTALL(FILES ${IMAGE_FILES}
-        DESTINATION ${QGIS_PLUGIN_DIR}/images)
+        DESTINATION /usr/share/qrap/images)
 
 
diff -Naur qrap-9999.orig/DataBase/LoginDialog.cpp qrap-9999/DataBase/LoginDialog.cpp
--- qrap-9999.orig/DataBase/LoginDialog.cpp	2017-02-19 18:55:24.493772676 +0200
+++ qrap-9999/DataBase/LoginDialog.cpp	2017-02-19 19:12:05.999442104 +0200
@@ -38,7 +38,7 @@
 	mUsernameLabel = new QLabel(tr("Username:"),this);
 	mPasswordLabel = new QLabel(tr("Password:"),this);
 	mUsernameEdit = new QLineEdit(this);
-	mUsernameEdit->insert("postgres");
+	mUsernameEdit->insert("qrap");
 	mPasswordEdit = new QLineEdit(this);
 	mDbLabel = new QLabel(tr("Database:"),this);
 	mHostLabel = new QLabel(tr("Host:"),this);
@@ -100,7 +100,7 @@
 	mPass = mPasswordEdit->text().toStdString();
 	mHost = mHostEdit->text().toStdString();
 	mDb = mDbEdit->text().toStdString();
-	mPort = atoi(mPortEdit->text().toStdString().c_str());
+	mPort = mPortEdit->text().toStdString();
 	
 	// Create a new connections
 	if(!gDb.Connect(mUser,mPass,false,mDb,mHost,mPort))
@@ -129,7 +129,7 @@
 	mPass = mPasswordEdit->text().toStdString();
 	mHost = mHostEdit->text().toStdString();
 	mDb = mDbEdit->text().toStdString();
-	mPort = atoi(mPortEdit->text().toStdString().c_str());
+	mPort = mPortEdit->text().toStdString();
 	close();
 }
 
@@ -158,7 +158,7 @@
 }
 
 //*****************************************
-int LoginDialog::getPort()
+string LoginDialog::getPort()
 {
 	return mPort;
 }
diff -Naur qrap-9999.orig/DataBase/LoginDialog.h qrap-9999/DataBase/LoginDialog.h
--- qrap-9999.orig/DataBase/LoginDialog.h	2017-02-19 18:55:24.498772664 +0200
+++ qrap-9999/DataBase/LoginDialog.h	2017-02-19 19:13:04.811305245 +0200
@@ -74,7 +74,7 @@
 		string getPassword();
 		string getDB();
 		string getHost();
-		int getPort();
+		string getPort();
 		
 	private slots:
 		/**
@@ -104,7 +104,7 @@
 		string mPass;
 		string mDb;
 		string mHost;
-		int mPort;
+		string mPort;
 	};
 	// username and password strings
 }
diff -Naur qrap-9999.orig/DataBase/cDatabase.cpp qrap-9999/DataBase/cDatabase.cpp
--- qrap-9999.orig/DataBase/cDatabase.cpp	2017-02-19 18:55:24.485772695 +0200
+++ qrap-9999/DataBase/cDatabase.cpp	2017-02-19 19:17:20.122711117 +0200
@@ -74,7 +74,7 @@
 
 //***********************************************************************************
 bool cDatabase::Connect (const string& username, const string& password, bool Create,
-			const string& database, const string& host, const int Iport)
+			const string& database, const string& host, const string& Iport)
 {
 /*	cout << "In cDatabase::Connect: " << username << endl;
 	cout << "In cDatabase::Connect: " << password << endl;
@@ -88,9 +88,7 @@
 */
 	mHostAddr = gSettings.GetValue("database.host");
 	mName = gSettings.GetValue("database.name");
-	string port = gSettings.GetValue("database.port");
-	mPort = (port.length() == 0) ? 5432 : atoi(port.c_str());
-	//	mPort =5433;
+	mPort = gSettings.GetValue("database.port");
 	gSettings.GetDbStructure(mStructure);
 	mConnected=true;
 	// try to connect to the database
@@ -98,12 +96,9 @@
 	{
 		QRAP_INFO("Authenticating user "+username+"...");
 		string query;
-		char * text = new char[33];
-		gcvt(mPort,8,text);
-		query = "hostaddr="+mHostAddr+" dbname="+mName+" port=";
-		query += text;
+		query = "host="+mHostAddr+" dbname="+mName+" port=";
+		query += mPort;
 		query += " user="+username+" password="+password;
-		delete [] text;
 		cout << query << endl;
 //		pqxx::connection *mConnection;
 		mConnection = new pqxx::connection(query);
@@ -111,6 +106,7 @@
 	{
 		mConnected=false;
 		QRAP_WARN("Invalid username or password specified. ... or port ... or host. Did you create the database? See manual for instructions on creating the database");
+		QRAP_WARN(e.what());
 //		QRAP_FATAL_CODE("Invalid username or password specified. ... or port ... or host" , acDbAuth);
 	} catch (pqxx::internal_error& e)
 	{
diff -Naur qrap-9999.orig/DataBase/cDatabase.h qrap-9999/DataBase/cDatabase.h
--- qrap-9999.orig/DataBase/cDatabase.h	2017-02-19 18:55:24.501772658 +0200
+++ qrap-9999/DataBase/cDatabase.h	2017-02-19 19:21:25.070141108 +0200
@@ -203,7 +203,7 @@
 		 * extended information on the reason for failure.
 		 */
 		bool Connect (const string& username, const string& password, bool Create=false,
-			const string& database="qrap", const string& host="localhost", const int Iport=5432);
+			const string& database="qrap", const string& host="localhost", const string& Iport=5432);
 		
 
 		bool Connected() { return mConnected;}
@@ -700,7 +700,7 @@
 		 */
 		std::string       mHostAddr;               ///< The IP address of the local database.
 		std::string       mName;                   ///< The name of the local database to which to connect.
-		int               mPort;                   ///< The local database port number through which to connect.
+		std::string               mPort;                   ///< The local database port number through which to connect.
 		pqxx::connection* mConnection;             ///< The connection to the database.
 		DbStructure       mStructure;              ///< The database structure template, loaded from the Settings parameter of the constructor.
 		pqxx::result      mLastResult;             ///< The result of the last query to the database.
diff -Naur qrap-9999.orig/DataBase/settings.xml qrap-9999/DataBase/settings.xml
--- qrap-9999.orig/DataBase/settings.xml	2017-02-19 18:55:24.502772656 +0200
+++ qrap-9999/DataBase/settings.xml	2017-02-19 19:22:18.714016275 +0200
@@ -5,7 +5,7 @@
 	<logfile location="./qrap.log" />
 	
 	<!-- Local (client) database settings -->
-	<database host="127.0.0.1" name="qrap" port="5432" />
+	<database host="127.0.0.1" name="qrap" port="5433" />
 	
 	<!-- PostGIS settings -->
 	<postgis srid="4326" />
@@ -14,5 +14,5 @@
 	<syncserver host="192.168.1.1" port="6234" />
 	
 	<!-- The location of the database structure XML file -->
-	<structure location="/usr/lib/qgis/plugins/structure.xml" />
+	<structure location="/usr/share/qrap/resources/structure.xml" />
 </settings>
diff -Naur qrap-9999.orig/qrap.cpp qrap-9999/qrap.cpp
--- qrap-9999.orig/qrap.cpp	2017-02-19 18:55:24.509772639 +0200
+++ qrap-9999/qrap.cpp	2017-02-19 19:25:05.575627977 +0200
@@ -292,7 +292,7 @@
 	/** \TODO: Get a place for settings.xml and structure.xml or find a way to set the location
 	 */
 
-	if (!gSettings.LoadFromFile("/usr/lib/qgis/plugins/settings.xml"))
+	if (!gSettings.LoadFromFile("/usr/share/qrap/resources/settings.xml"))
 	{
 		cout << "Error while loading settings from settings.xml" << endl;
 		exit(1);
diff -Naur qrap-9999.orig/qrap.h qrap-9999/qrap.h
--- qrap-9999.orig/qrap.h	2017-02-19 18:55:24.476772716 +0200
+++ qrap-9999/qrap.h	2017-02-19 19:25:29.101573230 +0200
@@ -86,7 +86,7 @@
 #include "Prediction/cSpectralPlot.h"
 #include "Prediction/cPlotTask.h"
 #include "Prediction/cLink.h"
-#include <cMouseEvents.h>
+#include "cMouseEvents.h"
 #include "Interface/cPlaceSite.h"
 #include "Interface/cDeleteObject.h"
 #include "Interface/cConfirmLink.h"
